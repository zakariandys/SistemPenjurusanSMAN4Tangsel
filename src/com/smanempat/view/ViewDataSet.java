/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.smanempat.view;

import com.smanempat.controller.ControllerDataSet;
import com.smanempat.controller.ControllerEvaluation;
import java.awt.Cursor;
import java.awt.event.ActionEvent;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.event.TableModelListener;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import org.apache.poi.hssf.usermodel.HSSFCell;
import org.apache.poi.hssf.usermodel.HSSFRow;
import org.apache.poi.hssf.usermodel.HSSFSheet;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.xssf.usermodel.XSSFCell;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

/**
 *
 * @author Zakaria Andy S
 */
public class ViewDataSet extends javax.swing.JInternalFrame {

    private DefaultTableModel tableModel;
    private JFileChooser fileChooser;
    private FileNameExtensionFilter fileNameExtensionFilter;
    private File fileName;
    private FileInputStream inputStream;
    private Object returnCellValue;
    private HSSFWorkbook workBooks;
    private HSSFSheet sheets;
    private HSSFRow rows;
    private HSSFCell cells;
    private XSSFWorkbook workBook;
    private XSSFSheet sheet;
    private XSSFRow row;
    private XSSFCell cell;

    private int rowValue;
    private int columnValue;
    private int type;
    public int countOutlier;

    public String[] columnName;
    public String[][] data;
    public String dataCell;
    public String query;
    public String tahun;
    public String nis;
    public String nama;
    public String jenisKelamin;
    public String nilaiUN;
    public String ptBindo;
    public String ptMtk;
    public String ptBing;
    public String ptIpa;
    public String minat;
    public String jurusan;
    public String tahunAjaran;

    ControllerDataSet controllerDataSet;
    ControllerEvaluation controllerEvaluation;

    public ViewDataSet() {
        initComponents();
        setLocation(15, 115);
        initialization();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        labelTahunAjaran = new javax.swing.JLabel();
        labelPilihFile = new javax.swing.JLabel();
        txtFileDirectory = new javax.swing.JTextField();
        btnBrowse = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        thnAjaran1 = new com.toedter.calendar.JYearChooser();
        thnAjaran2 = new com.toedter.calendar.JYearChooser();
        jButton3 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        lableAllData = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablePreview = new javax.swing.JTable();
        buttonImport = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        labelJumlahData = new javax.swing.JLabel();
        buttonReset = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        labelJumlahOutlier = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        setTitle("Dataset");
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/com/smanempat/image/dataset.png"))); // NOI18N

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Dataset", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N

        labelTahunAjaran.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        labelTahunAjaran.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        labelTahunAjaran.setText("Tahun Ajaran :");

        labelPilihFile.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        labelPilihFile.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        labelPilihFile.setText("Pilih File :");

        btnBrowse.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnBrowse.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/smanempat/image/button-browse.png"))); // NOI18N
        btnBrowse.setText("Browse..");
        btnBrowse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBrowseActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("/");

        jButton3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/smanempat/image/button-view.png"))); // NOI18N
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel3.setText("Jumlah Keseluruhan Data Pada Dataset Saat Ini :");

        lableAllData.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lableAllData.setText("0 Data");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(labelPilihFile)
                    .addComponent(labelTahunAjaran))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(thnAjaran1, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(thnAjaran2, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton3))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(txtFileDirectory, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnBrowse)))
                .addGap(44, 44, 44)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lableAllData)
                    .addComponent(jLabel3))
                .addContainerGap(592, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lableAllData)
                        .addGap(5, 5, 5))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(labelTahunAjaran, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(thnAjaran2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 26, Short.MAX_VALUE)
                                .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(thnAjaran1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelPilihFile)
                            .addComponent(txtFileDirectory, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnBrowse, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(29, 29, 29))
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Data Preview", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N

        tablePreview.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "NIS", "NAMA", "JK", "UN", "PT B.INDO", "PT MTK", "PT B.ING", "PT IPA", "MINAT", "JURUSAN"
            }
        ));
        jScrollPane1.setViewportView(tablePreview);
        if (tablePreview.getColumnModel().getColumnCount() > 0) {
            tablePreview.getColumnModel().getColumn(0).setResizable(false);
            tablePreview.getColumnModel().getColumn(0).setPreferredWidth(10);
            tablePreview.getColumnModel().getColumn(1).setMinWidth(170);
            tablePreview.getColumnModel().getColumn(1).setPreferredWidth(100);
            tablePreview.getColumnModel().getColumn(3).setMinWidth(5);
            tablePreview.getColumnModel().getColumn(3).setPreferredWidth(5);
            tablePreview.getColumnModel().getColumn(4).setMinWidth(1);
            tablePreview.getColumnModel().getColumn(4).setPreferredWidth(10);
            tablePreview.getColumnModel().getColumn(5).setPreferredWidth(5);
            tablePreview.getColumnModel().getColumn(6).setPreferredWidth(5);
            tablePreview.getColumnModel().getColumn(7).setPreferredWidth(5);
            tablePreview.getColumnModel().getColumn(8).setPreferredWidth(5);
            tablePreview.getColumnModel().getColumn(9).setMinWidth(5);
            tablePreview.getColumnModel().getColumn(9).setPreferredWidth(5);
        }

        buttonImport.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        buttonImport.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/smanempat/image/button-import.png"))); // NOI18N
        buttonImport.setText("Import to Database");
        buttonImport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonImportActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel2.setText("Jumlah Data : ");

        labelJumlahData.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        labelJumlahData.setForeground(new java.awt.Color(0, 153, 51));
        labelJumlahData.setText("0 Data");

        buttonReset.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        buttonReset.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/smanempat/image/button-reset.png"))); // NOI18N
        buttonReset.setText("Reset");
        buttonReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonResetActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel4.setText("Outlier Yang Terdeteksi :");

        labelJumlahOutlier.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        labelJumlahOutlier.setForeground(new java.awt.Color(204, 0, 0));
        labelJumlahOutlier.setText("0 Data");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1289, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(labelJumlahData, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(50, 50, 50)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(labelJumlahOutlier, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(buttonImport)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonReset)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(labelJumlahOutlier, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2)
                        .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(labelJumlahData, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 324, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(buttonImport, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(buttonReset, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(15, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBrowseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBrowseActionPerformed
        try {
            fileChooser = new JFileChooser();
            fileNameExtensionFilter = new FileNameExtensionFilter("Excel File", "xls", "xlsx");
            fileChooser.setFileFilter(fileNameExtensionFilter);
            if (fileChooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
                txtFileDirectory.setText(fileChooser.getSelectedFile().getAbsolutePath());
                previewFile(evt);
            }
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Problem while load file!", "Informasi Kesalahan Upload", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnBrowseActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        ViewDialogDataset viewDialogDataset = new ViewDialogDataset(null, true);
        viewDialogDataset.setVisible(true);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void buttonResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonResetActionPerformed
        // TODO add your handling code here:
        initialization();
    }//GEN-LAST:event_buttonResetActionPerformed

    private void buttonImportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonImportActionPerformed
        int confirm = JOptionPane.showOptionDialog(null, "Yakin ingin meng-import data dengan Tahun Ajaran " + thnAjaran1.getYear()
                + "/" + thnAjaran2.getYear() + "?", "Import Dataser", JOptionPane.OK_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE, null, null, null);
        if (confirm == JOptionPane.OK_OPTION) {
            try {
                this.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
                controllerDataSet = new ControllerDataSet();
                controllerDataSet.importToDatabase(rowValue, columnValue, data, thnAjaran1, thnAjaran2, tableModel, countOutlier, lableAllData);
                this.setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
            } catch (SQLException ex) {
                Logger.getLogger(ViewDataSet.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

    }//GEN-LAST:event_buttonImportActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBrowse;
    private javax.swing.JButton buttonImport;
    private javax.swing.JButton buttonReset;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel labelJumlahData;
    private javax.swing.JLabel labelJumlahOutlier;
    private javax.swing.JLabel labelPilihFile;
    private javax.swing.JLabel labelTahunAjaran;
    private javax.swing.JLabel lableAllData;
    private javax.swing.JTable tablePreview;
    private com.toedter.calendar.JYearChooser thnAjaran1;
    private com.toedter.calendar.JYearChooser thnAjaran2;
    private javax.swing.JTextField txtFileDirectory;
    // End of variables declaration//GEN-END:variables

    private void previewFile(ActionEvent evt) {
        controllerDataSet = new ControllerDataSet();
        try {
            if (txtFileDirectory.getText().endsWith(".xlsx")) {
                previewXLSX();
                buttonImport.setEnabled(true);
            } else if (txtFileDirectory.getText().endsWith(".xls")) {
                previewXLS();
                buttonImport.setEnabled(true);
            } else {
                JOptionPane.showMessageDialog(this, "File dataset harus file spreadsheet dengan ekstensi *xls atau *.xlsx!", "Error", JOptionPane.ERROR_MESSAGE, new ImageIcon("src/com/smanempat/image/fail.png"));
                btnBrowseActionPerformed(evt);
                initialization();
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Terjadi kesalahan saat memilih file, pastikan format file dataset sudah benar.\n\n"
                    + "Pesan Error :\n" + e.fillInStackTrace() + "\n\n"
                    + "Lihat menu Help untuk bantuan penggunaan.", "Error", JOptionPane.ERROR_MESSAGE, new ImageIcon("src/com/smanempat/image/fail.png"));
        }
    }

    private void previewXLSX() throws FileNotFoundException, IOException {
        /*Method Untuk Membaca Dataset dengan ekstensi .XLS*/
        fileName = new File(txtFileDirectory.getText());
        inputStream = new FileInputStream(fileName);
        workBook = new XSSFWorkbook(inputStream);
        sheet = workBook.getSheetAt(0);

        countOutlier = 0;
        rowValue = sheet.getLastRowNum() + 1;
        columnValue = sheet.getRow(0).getLastCellNum();
        data = new String[rowValue][columnValue];
        columnName = new String[columnValue];
        for (int i = 0; i < rowValue; i++) {
            row = sheet.getRow(i);
            for (int j = 0; j < columnValue; j++) {
                cell = row.getCell(j);
                type = cell.getCellType();
                returnCellValue = null;
                if (type == 0) {
                    returnCellValue = cell.getNumericCellValue();
                } else if (type == 1) {
                    returnCellValue = cell.getStringCellValue();
                }

                //dataCell = returnCellValue.toString();
                data[i][j] = returnCellValue.toString();
            }
            /*Cleansing Anomali Data (Outlier), Dimulai dari i atau baris ke 1*/
            if (i != 0) {
                double tempNilaiUN = Double.parseDouble(data[i][3]);
                double tempPtBindo = Double.parseDouble(data[i][4]);
                double tempPtMtk = Double.parseDouble(data[i][5]);
                double tempPtBing = Double.parseDouble(data[i][6]);
                double tempPtIpa = Double.parseDouble(data[i][7]);
                if (tempNilaiUN == 0.0 || tempPtBindo == 0.0 || tempPtMtk == 0.0 || tempPtBing == 0.0 || tempPtIpa == 0.0) {
                    countOutlier = countOutlier + 1;
                }
            }
        }
        /*Set column name*/
        for (int i = 0; i < columnValue; i++) {
            columnName[i] = data[0][i];
        }
        /*Set table model and show file on table*/
        tableModel = new DefaultTableModel(data, columnName);
        tablePreview.setModel(tableModel);
        tableModel.removeRow(0);
        labelJumlahData.setText(tableModel.getRowCount() + " Data");
        labelJumlahOutlier.setText(countOutlier + " Data");
    }

    private void previewXLS() {
        /*Method Untuk Membaca Dataset dengan ekstensi .XLS*/
        try {
            fileName = new File(txtFileDirectory.getText());
            inputStream = new FileInputStream(fileName);
            workBooks = new HSSFWorkbook(inputStream);
            sheets = workBooks.getSheetAt(0);

            countOutlier = 0;
            rowValue = sheets.getLastRowNum() + 1;
            columnValue = sheets.getRow(0).getLastCellNum();
            data = new String[rowValue][columnValue];
            columnName = new String[columnValue];
            for (int i = 0; i < rowValue; i++) {
                rows = sheets.getRow(i);
                for (int j = 0; j < columnValue; j++) {
                    cells = rows.getCell(j);
                    type = cells.getCellType();
                    returnCellValue = null;
                    if (type == 0) {
                        returnCellValue = cells.getNumericCellValue();
                    } else if (type == 1) {
                        returnCellValue = cells.getStringCellValue();
                    }
                    data[i][j] = returnCellValue.toString();
                }
                /*Cleansing Anomali Data (Outlier), Dimulai dari i atau baris ke 1*/
                if (i != 0) {
                    double tempNilaiUN = Double.parseDouble(data[i][3]);
                    double tempPtBindo = Double.parseDouble(data[i][4]);
                    double tempPtMtk = Double.parseDouble(data[i][5]);
                    double tempPtBing = Double.parseDouble(data[i][6]);
                    double tempPtIpa = Double.parseDouble(data[i][7]);
                    if (tempNilaiUN == 0.0 || tempPtBindo == 0.0 || tempPtMtk == 0.0 || tempPtBing == 0.0 || tempPtIpa == 0.0) {
                        countOutlier = countOutlier + 1;
                    }
                }
            }
            /*Set column name*/
            for (int i = 0; i < columnValue; i++) {
                columnName[i] = data[0][i];
            }
            /*Set table model and show file on table*/
            tableModel = new DefaultTableModel(data, columnName);
            tablePreview.setModel(tableModel);
            tableModel.removeRow(0);
            labelJumlahData.setText(tableModel.getRowCount() + " Data");
            labelJumlahOutlier.setText(countOutlier + " Data");
        } catch (FileNotFoundException ex) {
            Logger.getLogger(ViewDataSet.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(ViewDataSet.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    private void initialization() {
        /*Method untuk inisialisasi form*/
        try {
            controllerDataSet = new ControllerDataSet();
            int totalData = controllerDataSet.countTotalData();
            buttonImport.setEnabled(false);
            txtFileDirectory.setText("");
            txtFileDirectory.setEditable(false);
            lableAllData.setText(totalData + " Data");
            labelJumlahData.setText(0 + " Data");
            labelJumlahOutlier.setText(0 + " Data");
            tablePreview.setModel(new javax.swing.table.DefaultTableModel(
                    new Object[][]{},
                    new String[]{
                        "NIS", "Nama", "JK", "UN", "PT BINDO", "PT MTK", "PT BING", "PT IPA", "MINAT", "JURUSAN"
                    }
            ));
        } catch (Exception e) {
            System.out.println("com.smanempat.view.ViewDataSet.initialization() : " + e);
        }

    }

}
